"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  color: ", ";\n  text-shadow: ", ";\n  font-family: ", ";\n  font-size: ", ";\n  font-weight: ", ";\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var Caption = function Caption(_ref) {
  var _ref$color = _ref.color,
      color = _ref$color === void 0 ? '#fff' : _ref$color,
      _ref$outlineColor = _ref.outlineColor,
      outlineColor = _ref$outlineColor === void 0 ? '#000' : _ref$outlineColor,
      _ref$fontFamily = _ref.fontFamily,
      fontFamily = _ref$fontFamily === void 0 ? '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Noto Sans, Ubuntu, Droid Sans, Helvetica Neue, sans-serif' : _ref$fontFamily,
      _ref$fontSize = _ref.fontSize,
      fontSize = _ref$fontSize === void 0 ? 16 : _ref$fontSize,
      _ref$fontWeight = _ref.fontWeight,
      fontWeight = _ref$fontWeight === void 0 ? 'normal' : _ref$fontWeight,
      children = _ref.children,
      _ref$className = _ref.className,
      className = _ref$className === void 0 ? '' : _ref$className;
  return _react.default.createElement(Wrapper, {
    color: color,
    outlineColor: outlineColor,
    fontFamily: fontFamily,
    fontSize: fontSize,
    fontWeight: fontWeight,
    className: className
  }, children);
};

var Wrapper = _styledComponents.default.div(_templateObject(), function (_ref2) {
  var color = _ref2.color;
  return color;
}, function (_ref3) {
  var outlineColor = _ref3.outlineColor;
  return "1px 1px 0 ".concat(outlineColor, ", -1px -1px 0 ").concat(outlineColor, ", -1px 1px 0 ").concat(outlineColor, ", 1px -1px 0 ").concat(outlineColor, ", 0px 1px 0 ").concat(outlineColor, ", 0 -1px 0 ").concat(outlineColor, ", -1px 0 0 ").concat(outlineColor, ", 1px 0 0 ").concat(outlineColor);
}, function (_ref4) {
  var fontFamily = _ref4.fontFamily;
  return fontFamily;
}, function (_ref5) {
  var fontSize = _ref5.fontSize;
  return "".concat(fontSize, "px");
}, function (_ref6) {
  var fontWeight = _ref6.fontWeight;
  return fontWeight;
});

var _default = Caption;
exports.default = _default;